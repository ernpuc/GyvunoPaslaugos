@model PetServiceWebApplication.Models.BookingViewModel

<h1>Book a Service</h1>

<div class="card mb-3">
    <div class="card-body">
        <h4 class="card-title">@Model.ServiceName</h4>
        <p class="card-text">Price: @Model.ServicePrice.ToString("C")</p>
    </div>
</div>

<form id="bookingForm">
    <input type="hidden" name="ServiceId" value="@Model.ServiceId" />

    <div class="form-group">
        <label for="RequestedServiceDate">Requested Service Date</label>
        <input id="RequestedServiceDate" name="RequestedServiceDate" type="date" class="form-control" required />
    </div>

    <div class="form-group">
        <label for="RequestedServiceTime">Requested Service Time</label>
        <input id="RequestedServiceTime" name="RequestedServiceTime" type="time" class="form-control" required />
    </div>

    <button type="submit" class="btn btn-primary mt-3">Confirm Booking</button>
</form>

<div id="responseMessage" class="mt-3"></div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const form = document.getElementById("bookingForm");
            const responseMessage = document.getElementById("responseMessage");

            form.addEventListener("submit", async function (event) {
                event.preventDefault();

                const formData = {
                    ServiceId: document.querySelector("input[name='ServiceId']").value,
                    RequestedServiceDate: document.getElementById("RequestedServiceDate").value,
                    RequestedServiceTime: document.getElementById("RequestedServiceTime").value + ":00"
                };

                try {
                    const response = await fetch('/api/Booking/create', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Accept': 'application/json',
                        },
                        body: JSON.stringify(formData)
                    });

                    if (response.ok) {
                        const result = await response.json();
                        responseMessage.innerHTML = `<div class="alert alert-success">${result.message}</div>`;
                        console.log(result);
                    } else {
                        const errorText = await response.text();
                        responseMessage.innerHTML = `<div class="alert alert-danger">Error: ${errorText}</div>`;
                        console.error("Error:", errorText);
                    }
                } catch (error) {
                    console.error("Fetch error:", error);
                    responseMessage.innerHTML = `<div class="alert alert-danger">An unexpected error occurred.</div>`;
                }
            });
        });
    </script>
}

