@model PetServiceWebApplication.Models.ProviderInfoDTO

<link rel="stylesheet" href="~/css/admin.css" />

<div class="admin-container">
    <div class="admin-grid">

        <!-- Left Column: Update Provider -->
        <div class="admin-section">
            <h2 class="admin-title">Update Provider</h2>
            <form id="updateProviderForm">
                <input type="hidden" name="Id" id="updateProviderId" value="@Model.Provider.Id" />

                <div class="form-group">
                    <label for="updateName">Name:</label>
                    <input type="text" name="Name" id="updateName" value="@Model.Provider.Name" />
                </div>

                <div class="form-group">
                    <label for="updateAddress">Address:</label>
                    <input type="text" name="Address" id="updateAddress" value="@Model.Provider.Address" />
                </div>

                <div class="form-group">
                    <label for="updatePhone">Phone:</label>
                    <input type="text" name="Phone" id="updatePhone" value="@Model.Provider.Phone" />
                </div>

                <div class="form-group">
                    <label for="updateEmail">Email:</label>
                    <input type="text" name="Email" id="updateEmail" value="@Model.Provider.Email" />
                </div>

                <div class="form-group">
                    <label for="updateCategory">Category:</label>
                    <select id="updateCategory" name="Category">
                        <option value="" disabled selected>Select a category</option>
                        @foreach (var category in Enum.GetValues(typeof(PetServiceWebApplication.Models.PetServiceProvider.ProviderCategory)))
                        {
                            <option value="@category" selected="@(Model.Provider.Category == (PetServiceWebApplication.Models.PetServiceProvider.ProviderCategory)category ? "true" : null)">@category</option>
                        }
                    </select>
                </div>

                <div class="form-group">
                    <label for="updateDescription">Description:</label>
                    <textarea name="Description" id="updateDescription" rows="3">@Model.Provider.Description</textarea>
                </div>

                <div class="form-group">
                    <label for="updateImageUrl">Image URL:</label>
                    <input type="text" name="ImageUrl" id="updateImageUrl" value="@Model.Provider.Image" />
                </div>

                <button type="submit" class="admin-btn">Save Changes</button>
            </form>
        </div>

        <!-- Right Column: Services -->
        <div class="admin-section">
            <h2 class="admin-title">Services</h2>

            <div id="tableContainer" @(Model.Services.Any() ? "style=display:block;" : "style=display:none")>
                <table id="servicesTable" class="table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Description</th>
                            <th>Price</th>
                            <th>Type</th>
                            <th>Animal</th>
                            <th>Manage</th>
                            <th>Remove</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var service in Model.Services)
                        {
                            <tr>
                                <td>@service.Name</td>
                                <td>@service.Description</td>
                                <td>@service.Price €</td>
                                <td>@service.ServiceType</td>
                                <td>@service.TargetAnimal</td>
                                <td><a href="UpdateService/@service.Id" class="manage-link">Manage</a></td>
                                <td><a href="#" class="delete-link" data-id="@service.Id">Remove</a></td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div id="noProvidersMessage" @(Model.Services.Any() ? "style=display:none;" : "style=display:block")>
                No Services found.
            </div>

            <h3 class="admin-subtitle">Add New Service</h3>
            <form id="addServiceForm">
                <div class="form-group">
                    <label for="name">Name:</label>
                    <input type="text" id="name" name="Name" required />
                </div>

                <div class="form-group">
                    <label for="description">Description:</label>
                    <input type="text" id="description" name="Description" required />
                </div>

                <div class="form-group">
                    <label for="price">Price:</label>
                    <input type="text" id="price" name="Price" required />
                </div>

                <div class="form-group">
                    <label for="serviceType">Service Type:</label>
                    <select id="serviceType" name="ServiceType" required>
                        <option value="" disabled selected>Select a service type</option>
                        @if (@Model.Provider.Category == PetServiceWebApplication.Models.PetServiceProvider.ProviderCategory.Grooming)
                        {
                            <option value="BasicGrooming">Grooming</option>
                            <option value="AdvancedGrooming">Advanced Grooming</option>
                            <option value="DeluxeGrooming">Deluxe Grooming</option>
                        }
                        else if (@Model.Provider.Category == PetServiceWebApplication.Models.PetServiceProvider.ProviderCategory.Training)
                        {
                            <option value="BasicTraining">Basic Training</option>
                            <option value="ObedienceTraining">Obedience Training</option>
                            <option value="AdvancedTraining">Advanced Training</option>
                        }
                        else if (@Model.Provider.Category == PetServiceWebApplication.Models.PetServiceProvider.ProviderCategory.Boarding)
                        {
                            <option value="ShortTermBoarding">Short Term Boarding</option>
                            <option value="LongTermBoarding">Long Term Boarding</option>
                            <option value="SpecialCareBoarding">Special Care Boarding</option>
                        }
                        else if (@Model.Provider.Category == PetServiceWebApplication.Models.PetServiceProvider.ProviderCategory.Veterinary)
                        {
                            <option value="GeneralCheckup">General Checkup</option>
                            <option value="Vaccination">Vaccination</option>
                            <option value="Surgery">Surgery</option>
                        }
                    </select>

                </div>

                <div class="form-group">
                    <label for="targetAnimal">Target Animal:</label>
                    <select id="targetAnimal" name="TargetAnimal" required>
                        <option value="" disabled selected>Select a target animal</option>
                        <option value="Dog">Dog</option>
                        <option value="Cat">Cat</option>
                        <option value="Bird">Bird</option>
                        <option value="Reptile">Reptile</option>
                        <option value="Other">Other</option>
                    </select>
                </div>

                <button type="submit" class="admin-btn">Add Service</button>
            </form>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        document.getElementById('updateProviderForm').addEventListener('submit', async function(e) {
            e.preventDefault();

            const formData = new FormData(this);
            const id = formData.get('Id');
            const data = {
                Id: parseInt(id),
                Name: formData.get('Name'),
                Address: formData.get('Address'),
                Phone: formData.get('Phone'),
                Email: formData.get('Email'),
                Category: formData.get('Category'),
                Description: formData.get('Description'),
                Image: formData.get('ImageUrl')
            };

            const response = await fetch('/api/admin/provider/update/' + id, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            });

            if (response.ok) {
                window.location.href = '/api/admin';
            } else {
                alert("Error updating provider: " + await response.text());
            }
        });

        document.getElementById('addServiceForm').addEventListener('submit', async function (event) {
            event.preventDefault();

            const providerId = window.location.pathname.split('/').pop();
            const formData = new FormData(this);

            const data = {
                PetServiceProviderId: providerId,
                Name: formData.get('Name'),
                Description: formData.get('Description'),
                Price: formData.get('Price'),
                ServiceType: formData.get('ServiceType'),
                TargetAnimal: formData.get('TargetAnimal')
            };

            const response = await fetch('/api/admin/service/add', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            });

            if (response.ok) {
                window.location.reload()
            } else {
                alert("Error adding service: " + await response.text());
            }
        });

        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.delete-service-link').forEach(link => {
                link.addEventListener('click', async function (e) {
                    e.preventDefault();

                    const serviceId = this.dataset.id;

                    if (confirm("Are you sure you want to delete this service?")) {
                        const response = await fetch(`/api/admin/service/delete/${serviceId}`, {
                            method: 'DELETE'
                        });

                        if (response.ok) {
                            alert("Service deleted successfully.");
                            window.location.reload();
                        } else {
                            const error = await response.text();
                            alert("Error deleting service: " + error);
                        }
                    }
                });
            });
        });

    </script>
}
