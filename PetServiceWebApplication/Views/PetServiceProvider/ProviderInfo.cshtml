@model PetServiceWebApplication.Models.ProviderInfoDTO

<div class="container py-5">
    <div class="row mb-4">
        <div class="col-md-8">
            <h1 class="text-primary">@Model.Provider.Name</h1>
            <p>
                <i class="bi bi-geo-alt"></i> @Model.Provider.Address <br/>
                <i class="bi bi-telephone"></i> @Model.Provider.Phone <br/>
                <i class="bi bi-envelope"></i> <a href="mailto:@Model.Provider.Email">@Model.Provider.Email</a> <br/>
            </p>
        </div>
        <ul>
            @foreach (var service in Model.Services)
            {
                <li>
                    <h5>@service.Name</h5>
                    <p>@service.Description</p>
                    <p><strong>Price:</strong> @service.Price €</p>
                </li>
            }
        </ul>
        <div class="col-md-4">
            <img src="@Model.Provider.Image" alt="Provider Image" style="max-width: 200px; height: auto;" />
        </div>

        <hr />

        <div>
            <h2>Reviews</h2>
            <p><strong>Average Rating: @Model.Provider.Rating.ToString("0.0")</strong> </p>
        </div>

        @if (!Model.Provider.Reviews.Any())
        {
            <p>No reviews have been submitted for this service provider yet.</p>
        }
        else
        {
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>Comment</th>
                        <th>Rating</th>
                        <th>Date</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var review in Model.Provider.Reviews)
                    {
                        <tr>
                            <td>@review.Comment</td>
                            <td>@review.Rating</td>
                            <td>@review.Date.ToLocalTime().ToString("yyyy-MM-dd HH:mm:ss")</td>
                        </tr>
                    }
                </tbody>
            </table>
        }

        <h3>Add a New Review</h3>
        <div>
            <label for="newRating">Rating (1-5):</label>
            <input type="number" id="newRating" min="1" max="5" required />
        </div>
        <div>
            <label for="newComment">Comment:</label>
            <textarea id="newComment" rows="3" required></textarea>
        </div>
        <button type="button" id="submitReviewBtn">Submit Review</button>
    </div>
</div>

<script>
    document.getElementById('submitReviewBtn').addEventListener('click', function () {
        const rating = document.getElementById('newRating').value;
        const comment = document.getElementById('newComment').value;
        const serviceId = @Model.Provider.Id;

        const data = {
            ApplicationUserId: "tmp",
            PetServiceProviderId: serviceId,
            Rating: parseInt(rating, 10),
            Comment: comment
        };

        fetch('/api/Review/Create', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        })
        .then(response => {
            if (!response.ok) {
                return response.text().then(text => { throw new Error(text); });
            }
            return response.json();
        })
        .then(result => {
            console.log("Review created:", result);
            window.location.reload();
        })
        .catch(err => {
            console.error("Error creating review:", err);
            alert("Could not create review. See console for details.");
        });
    });
</script>