@model PetServiceWebApplication.Models.ProviderInfoDTO

@{
    ViewData["Title"] = "Provider Info";
}

<link rel="stylesheet" href="~/css/providerdetails.css" />

<div class="provider-details-page container py-5">
    <div class="row mb-4">
        <div class="col-md-8">
            <h1 class="provider-header">@Model.Provider.Name</h1>
            <p>
                <i class="fa-solid fa-location-dot"></i> @Model.Provider.Address <br />
                <i class="fa-solid fa-phone"></i> @Model.Provider.Phone <br />
                <i class="fa-solid fa-envelope"></i>
                <a href="mailto:@Model.Provider.Email">@Model.Provider.Email</a> <br />
            </p>
            <div class="average-rating">
                <span class="rating-label">Average Rating:</span>
                <span class="stars" data-rating="@Model.Provider.Rating"></span>
            </div>
        </div>
        <div class="col-md-4">
            <img src="@Model.Provider.Image" alt="Provider Image" class="provider-image" />
        </div>
    </div>

    <div class="services-list">
        <h2 class="section-header">Services</h2>
        @foreach (var service in Model.Services)
        {
            <div class="service-card">
                <h5>@service.Name</h5>
                <p>@service.Description</p>
                <p><strong>Price:</strong> @service.Price €</p>
            </div>
        }
    </div>

    <div class="reviews-section">
        <h2 class="section-header">Reviews</h2>

        @if (!Model.Provider.Reviews.Any())
        {
            <p>No reviews yet.</p>
        }
        else
        {
            <table class="reviews-table table">
                <thead>
                    <tr>
                        <th>Comment</th>
                        <th>Rating</th>
                        <th>Date</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var review in Model.Provider.Reviews)
                    {
                        <tr>
                            <td>@review.Comment</td>
                            <td>@review.Rating</td>
                            <td>@review.Date.ToString("yyyy-MM-dd HH:mm")</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>

    <div class="add-review">
        <h3 class="section-header">Add a New Review</h3>
        <div class="form-group">
            <label for="newRating">Rating (1-5):</label>
            <input type="number" id="newRating" class="form-control" min="1" max="5" required />
        </div>
        <div class="form-group">
            <label for="newComment">Comment:</label>
            <textarea id="newComment" class="form-control" rows="3" required></textarea>
        </div>
        <button type="button" id="submitReviewBtn" class="btn submit-btn">Submit Review</button>
    </div>
</div>


<script>
    document.getElementById('submitReviewBtn').addEventListener('click', function () {
        const rating = document.getElementById('newRating').value;
        const comment = document.getElementById('newComment').value;
        const serviceId = @Model.Provider.Id;

        const data = {
            ApplicationUserId: "tmp",
            PetServiceProviderId: serviceId,
            Rating: parseInt(rating, 10),
            Comment: comment
        };

    fetch('/api/Review/Create', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
    })
    .then(response => {
        if (response.status === 401) {
            throw new Error("You have to be logged in to leave a review.");
        }
        if (!response.ok) {
            return response.text().then(text => { throw new Error(text); });
        }
        return response.json();
    })
    .then(result => {
        console.log("Review created:", result);
        alert("Review submitted successfully!");
        window.location.reload();
    })
    .catch(err => {
        console.error("Error creating review:", err.message);
        alert(err.message);
    });

    });

        document.addEventListener('DOMContentLoaded', function () {
        const starsContainer = document.querySelector('.stars');
        const rating = parseFloat(starsContainer.getAttribute('data-rating')) || 0;

        const maxStars = 5;
        let starsHtml = '';

        for (let i = 1; i <= maxStars; i++) {
            if (i <= Math.floor(rating)) {
                starsHtml += '<i class="fa-solid fa-star filled-star"></i>';
            } else if (i - 0.5 <= rating) {
                starsHtml += '<i class="fa-solid fa-star-half-stroke filled-star"></i>';
            } else {
                starsHtml += '<i class="fa-regular fa-star empty-star"></i>';
            }
        }

        starsContainer.innerHTML = starsHtml;
    });
</script>